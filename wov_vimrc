set nocompatible   
let mapleader=" " 
                   
set path+=**
set number
set wildmenu
set wildignore=*.o,*~,*.pyc
set cindent
set autoindent
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set backspace=indent,eol,start
set encoding=utf8
set ffs=unix,dos,mac
set autoread
set history=1000
set ignorecase
set smartcase
set hlsearch
nmap <leader><space> :nohlsearch<CR>
set lazyredraw
set magic
set showmatch
set noerrorbells
set novisualbell

filetype plugin on
filetype indent on
syntax enable

" Vim Plug Install
" This will create folder required to install plugins
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif
" Run the following, when new plugin is added
" :PlugInstall to install new plugins
call plug#begin('~/.vim/plugged')
  Plug 'ctrlpvim/ctrlp.vim'
  Plug 'scrooloose/nerdtree'
  Plug 'vim-airline/vim-airline'
call plug#end()

" NERDTree Settings
  let NERDTreeShowHidden=1
  nmap <leader>z :NERDTreeToggle<CR>
  let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp']
  autocmd VimEnter * wincmd p

nnoremap <leader><Right> <c-w>l
nnoremap <leader><Left> <c-w>h
nnoremap <leader><Up> <c-w>k
nnoremap <leader><Down> <c-w>
nnoremap <leader>q :q<CR>
nnoremap <leader>w :w<CR>

" Save temporary/backup files not in the local directory, but in your ~/.vim
" directory, to keep them out of git repos.
" But first mkdir backup, swap, and undo first to make this work
call system('mkdir ~/.vim')
call system('mkdir ~/.vim/backup')
call system('mkdir ~/.vim/swap')
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//

" Keep undo history across sessions by storing it in a file
if has('persistent_undo')
    call system('mkdir ~/.vim/undo')
    set undodir=~/.vim/undo//
    set undofile
    set undolevels=1000
    set undoreload=10000
endif

autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%

" allows cursor change in tmux mode
 if exists('$TMUX')
   let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
   let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
  else
   let &t_SI = "\<Esc>]50;CursorShape=1\x7"
   let &t_EI = "\<Esc>]50;CursorShape=0\x7"
 endif
